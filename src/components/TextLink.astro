---
import type { HTMLAttributes, HTMLTag } from "astro/types";
import { cn } from "../utils/classNames";

export type Props<T extends HTMLTag> = HTMLAttributes<T> & {
  tag?: T;
  inverted?: boolean;
};

const { inverted = false, tag = "a", class: className, ...props } = Astro.props;
const Tag = tag;

const finalTailwindClasses = cn(
  inverted &&
    cn(
      `text-links-inv border-line-inv`,
      `focus-visible:ring-offset-bg-inv`,
      `hover-hover:hover:text-text-inv`,
      `hover-hover:hover:border-links-active-inv`,
    ),
  !inverted &&
    cn(
      `text-links border-line`,
      `focus-visible:ring-offset-bg`,
      `hover-hover:hover:text-links-active`,
      `hover-hover:hover:border-links-active`,
    ),
  `dark:hover-hover:hover:bg-text`,
  `dark:hover-hover:hover:ml-0`,
  `cursor-pointer px-1 -ml-1 w-fit`,
  `decoration-clone underline underline-offset-8 decoration-4`,
  `inline-block leading-8 focus-visible:ring-offset-4`,
  `focusable`,
  `transition-all motion-reduce:transition-none`,
  className,
);
---

<Tag {...props} class={finalTailwindClasses}>
  <slot />
</Tag>
