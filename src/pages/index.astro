---
import HighlightedDatasets from "@/components/HighlightedDatasets.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import DefaultLayout from "../layouts/DefaultLayout.astro";
import { getEntry } from "astro:content";
import Paragraph from "@/components/Paragraph.astro";
import Heading from "@/components/Heading.astro";
import { components } from "@/components/macros/index.astro";
import { Image, getImage } from "astro:assets";
import Checklist from "@/components/Checklist.astro";
import { cn } from "@/utils/classNames";
import Button from "@/components/Button.astro";
import homepageWaveSectionTransition from "@/assets/images/misc/homepage-wave-section-transition.svg";

const entry = await getEntry("homepage", "homepage");
const { intro, openData, aboutOdis, journey, projects, resources, aktuelles } =
  entry.data;
const { Content } = await entry.render();
const boldify = (str: string): string => {
  const includesBr = str.includes("<br />") || str.includes("<br/>");
  if (!includesBr) return `<strong>${str}</strong>`;
  return str.replaceAll(/\*\*(.+)\*\*/g, "<strong>$1</strong>");
};

const sectionTransitionWave = await getImage({
  src: homepageWaveSectionTransition,
  format: "svg",
});
---

<DefaultLayout metaTitle={SITE_TITLE} metaDescription={SITE_DESCRIPTION}>
  <!-- INTRO -->
  <div class="grid-container">
    <div class="max-w-[50ch] lg:col-start-4 lg:col-span-7">
      <Heading size="xxl" class="font-normal" set:html={boldify(intro.title)} />
      {intro.text && <Paragraph size="lg" set:html={intro.text} />}
    </div>
  </div>

  <!-- WIMMELBILD -->
  <div class="grid-container pb-16">
    <HighlightedDatasets />
  </div>

  <!-- OPEN DATA -->
  <div class="grid-container">
    <div class="grid col-span-12 grid-cols-subgrid">
      <div class="col-span-10 lg:col-span-5 py-8 lg:pt-0 lg:pb-16">
        <Paragraph
          tag="h2"
          size="lg"
          class="mb-0"
          set:html={openData.subtitle}
        />
        <Heading
          tag="h3"
          size="xl"
          class="font-normal"
          set:html={boldify(openData.title)}
        />
        {
          openData.textPrefix && (
            <Paragraph tag="p" set:html={openData.textPrefix} />
          )
        }
        <Checklist items={openData.benefits} />
        {
          openData.textSuffix && (
            <Paragraph tag="p" set:html={openData.textSuffix} />
          )
        }
        {
          openData.buttons.map((button) => (
            <Button tag="a" href={button.link} variant={button.variant}>
              {button.text}
            </Button>
          ))
        }
      </div>
      <div
        class={cn(
          `row-start-1 lg:row-start-auto`,
          `col-span-10 lg:col-span-4 lg:col-start-7`,
          `relative aspect-video lg:aspect-auto`,
        )}
      >
        <div
          class={cn(
            `absolute top-0 bg-bg-alt`,
            `w-[110vw] h-full`,
            `-left-[calc((var(--gridGap)*2)+var(--columnSize)+var(--marginSize))]`,
            `lg:left-0 lg:w-[calc(100%+var(--marginSize)+(var(--columnSize)*2)+(var(--gridGap)*3))]`,
            `max-w-4xl`,
          )}
        >
          <Image
            src={openData.image}
            alt={openData.imageAltText}
            class="w-full h-full object-cover"
          />
        </div>
      </div>
    </div>
  </div>

  <!-- ABOUT ODIS -->
  <div class="bg-bg-inv text-text-inv lg:pb-24">
    <div class="grid-container">
      <div class="grid col-span-12 grid-cols-subgrid">
        <div
          class={cn(
            `col-span-10 lg:col-span-5`,
            `relative aspect-square lg:aspect-auto`,
          )}
        >
          <div
            class={cn(
              `absolute top-0 bg-bg-alt`,
              `w-[110vw] h-full`,
              `-left-[calc(var(--gridGap)+var(--marginSize))] lg:left-auto lg:right-0`,
              `lg:w-[calc(100%+var(--marginSize)+var(--gridGap))]`,
              `max-w-4xl`,
              ` shadow-secondary-inv`,
            )}
          >
            <Image
              src={aboutOdis.image}
              alt={aboutOdis.imageAltText}
              class="w-full h-full object-cover"
            />
          </div>
        </div>
        <div class="col-span-10 lg:col-span-5 lg:col-start-7 py-24 lg:pb-0">
          <Paragraph
            tag="h2"
            size="lg"
            class="mb-0"
            set:html={aboutOdis.subtitle}
            inverted
          />
          <Heading
            class="font-normal"
            tag="h3"
            size="xl"
            set:html={boldify(aboutOdis.title)}
            inverted
          />
          {
            aboutOdis.textPrefix && (
              <Paragraph tag="p" set:html={aboutOdis.textPrefix} inverted />
            )
          }
          <Checklist items={aboutOdis.benefits} />
          {
            aboutOdis.textSuffix && (
              <Paragraph tag="p" set:html={aboutOdis.textSuffix} inverted />
            )
          }
          {
            aboutOdis.buttons.map((button) => (
              <Button
                tag="a"
                href={button.link}
                variant={button.variant}
                inverted
              >
                {button.text}
              </Button>
            ))
          }
        </div>
      </div>
    </div>
  </div>

  <!-- MODULE / JOURNEY -->
  <!-- Decorative transition on desktop (rounded angle) -->
  <div class="grid-container hidden lg:grid" aria-hidden="true">
    <div class="grid col-span-12 grid-cols-subgrid">
      <div class="relative col-span-4">
        <div
          class={cn(
            "absolute h-full top-0 bg-bg-inv",
            `-left-[calc(var(--gridGap)+var(--marginSize))]`,
            `lg:w-[calc(100%+var(--marginSize)+var(--gridGap)+1px)]`,
          )}
          style={{ boxShadow: `0 -1px 0 0 var(--bg-inv)` }}
        >
        </div>
      </div>
      <div class="col-span-2 col-start-5 bg-right h-[112px] relative">
        <div
          class="absolute -top-px -left-[var(--gridGap)] w-[calc(100%+(var(--gridGap)*2))] h-[113px]"
        >
          <Image
            src={homepageWaveSectionTransition}
            alt=""
            class="w-full h-full object-cover object-right"
          />
        </div>
      </div>
    </div>
  </div>
  <!-- Module / Journey Contents -->
  <div class="grid-container">
    <div class="grid col-span-12 grid-cols-subgrid">
      <div
        class={cn(
          `col-span-10 lg:col-span-5 mb-16`,
          `relative aspect-square lg:aspect-auto`,
        )}
      >
        <div
          class="absolute w-full h-[calc(100%+112px)] bg-bg-alt -top-[112px] left-0"
        >
        </div>
      </div>
      <div class="col-span-10 lg:col-span-5 lg:col-start-7 pt-0 pb-16">
        <Heading
          class="font-normal"
          tag="h3"
          size="xl"
          set:html={boldify(journey.title)}
        />
        {
          journey.lead && (
            <Paragraph tag="p" size="lg" set:html={journey.lead} />
          )
        }
        <Paragraph tag="p" set:html={journey.text} />

        {
          journey.buttons.map((button) => (
            <Button tag="a" href={button.link} variant={button.variant}>
              {button.text}
            </Button>
          ))
        }
      </div>
    </div>
  </div>
  <Content components={components} />
</DefaultLayout>
